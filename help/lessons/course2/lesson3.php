<?php
B_PROLOG_INCLUDED === true || die();
?>
<ol>
	<li>Старайтесь для: ID инфоблока, ID групп пользователей, ID сайта использовать существующие константы или создавать
		свои. Практика "магических чисел" плохая.
	</li>
	<li><b>Будьте внимательны</b>, в задании 1 необходимо учитывать 2 состояния ДО и ПОСЛЕ. Деактивация, это когда было
		ACTIVE=Y, а стало ACTIVE=N. Если сделаете проверку ACTIVE=N, то вашу проверку легко обмануть, например
		пересохранить объект. Чтобы справиться с этой ситуацией потребуется выбрать из БД текущее состояние элемента ИБ
		в событии <i>OnBeforeIBlockElementUpdate</i>.
	</li>
	<li>Нельзя ожидать, что в $arFields (OnBeforeIBlockElementUpdate и пр.) будут все необходимые данные. Со 100%-
		вероятностью там будут узлы ID и IBLOCK_ID, остальные - зависит от способа, которым создается/изменяется
		элемент. В первом задании можно ожидать узла ACTIVE, но кроме него - ничего (например, узел ACTIVE_FROM будет не
		всегда).
	</li>
	<li>В третьем задании нужно использовать 2 обработчика: перед изменением пользователя нужно выбрать из БД его старые
		группы. В обработчике после изменений нужно снова выбрать из БД его текущие группы. Если пользователь не был в
		нужной группе раньше, а теперь есть - отправлять письмо.
	</li>
	<li>Если при установке сайта вы выбрали тип таблиц InnoDB, то вас ждет приятный сюрприз: вы не сможете
		деактивировать элемент вместо удаления (как этого требуют в задании 2). Причина в том, что InnoDB --
		транзакционный движок, а Битрикс “заворачивает” удаление элемента инфоблока в транзакцию. Если вы выполните
		return false в обработчике, то транзакция отменится и все ваши изменения с элементом откатятся.
		<a href="https://dev.1c-bitrix.ru/community/webdev/user/11948/blog/6453/">Решение</a>.
	</li>
</ol>